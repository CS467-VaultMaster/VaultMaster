worker_processes auto;      # matches number of CPU cores (1, in AWS EC2)

events {}

http {
    include       /etc/nginx/mime.types;

    # Rate limiting zone (based on IP)
    limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=1r/s;

    # HTTP requests
    server {
        listen 80;
        server_name www.vaultmaster.site vaultmaster.site;

        # Handle ACME challenges for SSL verification
        location ^~ /.well-known/acme-challenge/ {
            root /;
            try_files $uri =404;
        }

        # Redirect all other requests to HTTPS 
        location / {
            return 301 https://www.vaultmaster.site$request_uri;
        }
    }

    # Redirect: root to www subdomain
    server {
        listen 443 ssl;
        server_name vaultmaster.site;
        return 301 https://www.vaultmaster.site$request_uri;

        # SSL certs
        ssl_certificate /etc/nginx/ssl/vaultmaster.site.crt;
        ssl_certificate_key /etc/nginx/ssl/vaultmaster.site.key;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    }

    # Main HTTPS server
    server {
        listen 443 ssl;
        server_name www.vaultmaster.site;

        # SSL certs
        ssl_certificate /etc/nginx/ssl/vaultmaster.site.crt;
        ssl_certificate_key /etc/nginx/ssl/vaultmaster.site.key;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Root directory and index files
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # SPA routing (serves index.html on any invalid URI; 4XX handled in client)
        location / {
            # Rate limiting (with 5-req burst capacity)
            limit_req zone=ratelimit burst=5 nodelay;

            try_files $uri /index.html;
        }

        # Proxy API requests to the backend service
        location /vaultmaster {
            proxy_pass http://backend:8000; # docker compose mesh network hostname

            # Enable upstream (uvicorn) keepalive connections
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
}
